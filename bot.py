# bot.py
import asyncio
from telegram import Update, BotCommand
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext
import config as cfg
from handlers.response_handler import ResponseHandler
from handlers.translation_handler import TranslationHandlers
from handlers.voice_handler import VoiceHandlers
from handlers.speech_handler import SpeechHandler
from handlers.image_handler import ImageHandler
from utils.logger import setup_logger

logger = setup_logger(__name__)

class AsyaAssistantBot:
    """Main class for the AsyaAssistantBot."""

    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–æ—Ç–∞ –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã."""
        self.app = Application.builder().token(cfg.TELEGRAM_BOT_TOKEN).connect_timeout(30).read_timeout(60).build()
        self.translation_handlers = TranslationHandlers()
        self.response_handlers = ResponseHandler()
        self.image_handlers = ImageHandler()
        self.speech_handlers = SpeechHandler()
        self.voice_handlers = VoiceHandlers()



    def setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞."""
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        self.app.add_handler(CommandHandler("start", self.start))
        self.app.add_handler(CommandHandler("help", self.help_command))
        self.app.add_handler(self.response_handlers.get_handler())
        self.app.add_handler(self.translation_handlers.get_conversation_handler())
        self.app.add_handler(self.image_handlers.get_handler())
        self.app.add_handler(self.speech_handlers.get_handler())



        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /voice (–∏–∑ VoiceHandlers.get_handlers())
        for handler in self.voice_handlers.get_handlers():
            self.app.add_handler(handler)

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ–ª–æ—Å–∞ (–µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≥–æ–ª–æ—Å–∞)
        self.app.add_handler(MessageHandler(
            filters.TEXT & filters.Regex(f"^({'|'.join(cfg.VOICES_GPT.keys())})$"),
            self.voice_handlers.voice_selected
        ))
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ (–µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π –∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≥–æ–ª–æ—Å–∞)
        self.app.add_handler(MessageHandler(
            filters.TEXT & ~filters.COMMAND &
            ~filters.Regex(f"^({'|'.join(cfg.VOICES_GPT.keys())})$") &
            ~filters.Regex(f"^({'|'.join(cfg.SUPPORTED_LANGUAGES_FREE)})$") &
            filters.Regex("^/talk$") &
            filters.Regex("^/translate$") &
            filters.Regex("^/image$") &
            filters.Regex("^/speech$") ,
            self.voice_handlers.generate_voice
        ))

        self.app.add_handler(MessageHandler(
            filters.VOICE & filters.AUDIO & ~filters.COMMAND,
            self.speech_handlers.speech_service
        ))



    async def start(self, update: Update, context: CallbackContext) -> None:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start."""
        welcome_text = (
            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–æ–ª–µ–∑–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫, –º–æ–≥—É —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ç–µ–∫—Å—Ç–∞–º–∏, —Ä–∏—Å–æ–≤–∞—Ç—å, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∞—É–¥–∏–æ –≤ —Ç–µ–∫—Å—Ç -–¥–æ—Å—Ç—É–ø–Ω–æ –Ω–µ –º–µ–Ω–µ–µ 11 —è–∑—ã–∫–æ–≤, –æ–∑–≤—É—á–∏–≤–∞—Ç—å —Ç–µ–∫—Å—Ç-–¥–æ—Å—Ç—É–ø–Ω–æ 8 –≥–æ–ª–æ—Å–æ–≤.\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã, —á—Ç–æ–±—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å–æ –º–Ω–æ–π:\n\n"
            "üí¨ /talk - –û–±—â–µ–Ω–∏–µ —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º.\n"
            "üìñ /translate - –ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞.\n"
            "üñº /image - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.\n"   
            "üéô /speech - –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏.\n"
            "üîä /voice - –û–∑–≤—É—á–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞.\n"
            "‚ùå /cancel-–û—Ç–º–µ–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –∏ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç üîö –≤—ã—Ö–æ–¥ –∏–∑ –¥–∏–∞–ª–æ–≥–æ–≤.\n"
            "‚ÑπÔ∏è /help - –ü–æ–º–æ—â—å."
        )
        await update.message.reply_text(welcome_text)
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º.")

    async def help_command(self, update: Update, context: CallbackContext):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ."""
        help_text = (
            "‚ÑπÔ∏è **–ü–æ–º–æ—â—å**\n\n"
            "–Ø —Ç–≤–æ–π —è–∑—ã–∫–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫! –í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n\n"
            "üí¨ /talk - –û–±—â–µ–Ω–∏–µ —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º.\n"
            "üìñ /translate - –ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞.\n"
            "üñº /image - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.\n"   
            "üéô /speech - –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏.\n"
            "üîä /voice - –û–∑–≤—É—á–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞.\n"
            "‚ùå /cancel-–û—Ç–º–µ–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –∏ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç üîö –≤—ã—Ö–æ–¥ –∏–∑ –¥–∏–∞–ª–æ–≥–æ–≤.\n"
            "‚ÑπÔ∏è /help - –ü–æ–º–æ—â—å."
            "üí¨ **–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π**: [–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É](https://t.me/i_VAN_79)"
        )
        await update.message.reply_text(help_text, parse_mode="Markdown", disable_web_page_preview=True)

    async def set_bot_commands(self):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–±–æ—Ä–∞ –≤ Telegram."""
        commands = [
            BotCommand("start", "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
            BotCommand("talk", "–û–±—â–µ–Ω–∏–µ —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º"),
            BotCommand("translate", "–ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞"),
            BotCommand("image", "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"),
            BotCommand("speech", "–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏"),
            BotCommand("voice", "–û–∑–≤—É—á–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞"),
            BotCommand("cancel", "–û—Ç–º–µ–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è"),
            BotCommand("help", "–ü–æ–º–æ—â—å –∏ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞")
        ]
        tg_bot = self.app.bot if self.app.bot else await self.app.get_bot()
        await tg_bot.set_my_commands(commands)
        logger.info("–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")


async def main():
    bot = AsyaAssistantBot()
    bot.setup_handlers()
    await bot.app.initialize()
    await bot.set_bot_commands()
    # –£–¥–∞–ª—è–µ–º webhook, –µ—Å–ª–∏ –æ–Ω –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ä–∞–Ω–µ–µ
    await bot.app.bot.delete_webhook(drop_pending_updates=True)
    await bot.app.start()
    await bot.app.updater.start_polling()
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")

    try:
        await asyncio.Event().wait()
    except KeyboardInterrupt:
        await bot.app.stop()


if __name__ == "__main__":
    asyncio.run(main())
